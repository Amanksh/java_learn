# SQL Practice — Batch Questions 11–15 (Corrected Order)

> Paste any section directly into pgAdmin. Each question includes **CREATE TABLE** and **INSERT** statements with sample data. Tables are dropped (if they exist) before creation so you can re-run safely.

---

## Q11 — Email Campaign Report

```sql
-- Q11: Email Campaign Report
-- Drops (safe to re-run)
DROP TABLE IF EXISTS email_stats;
DROP TABLE IF EXISTS campaigns;

-- Schema
CREATE TABLE campaigns (
  id INT PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE email_stats (
  campaign_id INT REFERENCES campaigns(id),
  emails_sent INT NOT NULL,
  emails_opened INT NOT NULL
);

-- Sample data
INSERT INTO campaigns (id, name) VALUES
  (1, 'SummerSale2021'),
  (2, 'FallPromo'),
  (3, 'WinterWonderland');

INSERT INTO email_stats (campaign_id, emails_sent, emails_opened) VALUES
  (1, 1000, 800),
  (2, 1500, 1200),
  (3, 2000, 1800),
  (1, 500, 300),
  (2, 700, 500),
  (3, 800, 600),
  (1, 300, 200),
  (2, 400, 300),
  (3, 600, 500),
  (3, 400, 300);
```

---

## Q12 — Auction Lot Offers Report

```sql
-- Q12: Auction Lot Offers Report
-- Drops (safe to re-run)
DROP TABLE IF EXISTS offers;
DROP TABLE IF EXISTS lots;

-- Schema
CREATE TABLE lots (
  id INT PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE offers (
  lot_id INT REFERENCES lots(id),
  amount DECIMAL(6,2) NOT NULL
);

-- Sample data
INSERT INTO lots (id, name) VALUES
  (1, 'Acacia parramattensis Tindale'),
  (2, 'Poa arctica R. Br. ssp. aperta (Scribn. & Merr.) Soreng'),
  (3, 'Calophyllum inophyllum L.');

INSERT INTO offers (lot_id, amount) VALUES
  (1, 260.91),
  (1, 802.83),
  (1, 986.78),
  (2, 814.57),
  (2, 999.06),
  (2, 414.67),
  (3, 200.41),
  (3, 593.07),
  (3, 701.88),
  (3, 972.87);
```

---

## Q13 — Online Banking Transactions Report

```sql
-- Q13: Online Banking Transactions Report
-- Drops (safe to re-run)
DROP TABLE IF EXISTS transactions;
DROP TABLE IF EXISTS accounts;

-- Schema
CREATE TABLE accounts (
  id INT PRIMARY KEY,
  iban VARCHAR(255) NOT NULL
);

CREATE TABLE transactions (
  account_id INT REFERENCES accounts(id),
  dt CHAR(19) NOT NULL,
  amount DECIMAL(5,2) NOT NULL
);

-- Sample data
INSERT INTO accounts (id, iban) VALUES
  (1, 'BG40 RFFX 4898 53DD CZD6 KQ'),
  (2, 'PT42 5267 0592 8451 8001 2180 3'),
  (3, 'FR96 8758 8909 81LR DJ71 ERKN D56');

INSERT INTO transactions (account_id, dt, amount) VALUES
  (1, '2022-09-02 06:33:39', 33.31),
  (1, '2022-09-20 08:14:39', 31.77),
  (1, '2022-09-25 06:41:45', 72.84),
  (2, '2022-09-04 22:28:12', 35.26),
  (2, '2022-09-10 16:53:33', 16.36),
  (2, '2022-09-12 07:34:35', 29.78),
  (2, '2022-09-22 10:12:43', 36.24),
  (2, '2022-09-28 09:41:12', 9.13),
  -- Note: one August row below (intentionally present in sample data)
  (3, '2022-08-13 04:25:54', 71.62),
  (3, '2022-09-08 01:56:50', 93.59),
  (3, '2022-09-17 01:10:41', 93.84),
  (3, '2022-09-25 05:51:18', 92.50);
```

---

## Q14 — Top Wishlist Products Summary

```sql
-- Q14: Top Wishlist Products Summary
-- Drops (safe to re-run)
DROP TABLE IF EXISTS wishlists;
DROP TABLE IF EXISTS products;

-- Schema
CREATE TABLE products (
  id INT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  price DECIMAL(6,2) NOT NULL,
  in_stock SMALLINT NOT NULL  -- 1 = in stock, 0 = not in stock
);

CREATE TABLE wishlists (
  product_id INT REFERENCES products(id),
  customer_email VARCHAR(255) NOT NULL
);

-- Sample data
INSERT INTO products (id, name, price, in_stock) VALUES
  (1, 'TechGadget Pro X', 324.24, 1),
  (2, 'LuxuryHome Decor Set', 884.90, 1),
  (3, 'FitnessTracker Elite', 698.59, 0);

INSERT INTO wishlists (product_id, customer_email) VALUES
  (1, 'user1@example.com'),
  (1, 'user2@example.com'),
  (2, 'user3@example.com'),
  (2, 'user4@example.com'),
  (2, 'user5@example.com'),
  (3, 'user6@example.com'),
  (1, 'user7@example.com'),
  (2, 'user8@example.com'),
  (1, 'user9@example.com'),
  (3, 'user10@example.com');
```

---

## Q15 — E-commerce Customer Purchases Report

```sql
-- Q15: E-commerce Customer Purchases Report
-- Drops (safe to re-run)
DROP TABLE IF EXISTS purchases;
DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS customers;

-- Schema
CREATE TABLE customers (
  id INT PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE products (
  id INT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  price DECIMAL(6,2) NOT NULL
);

CREATE TABLE purchases (
  customer_id INT REFERENCES customers(id),
  product_id INT REFERENCES products(id)
);

-- Sample data
INSERT INTO customers (id, name) VALUES
  (1, 'Alice'),
  (2, 'Bob'),
  (3, 'Charlie');

INSERT INTO products (id, name, price) VALUES
  (1, 'Laptop', 1200.00),
  (2, 'Headphones', 200.00),
  (3, 'Mouse', 50.00),
  (4, 'Keyboard', 100.00);

INSERT INTO purchases (customer_id, product_id) VALUES
  (1, 1),
  (1, 2),
  (2, 3),
  (2, 4),
  (2, 2),
  (3, 1),
  (3, 3),
  (3, 2),
  (3, 4);
```
